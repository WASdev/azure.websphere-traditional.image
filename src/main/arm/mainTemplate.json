{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "dnsLabelPrefix": {
            "type": "string"
        },
        "vmSize": {
            "defaultValue": "Standard_D2_v3",
            "type": "string"
        },
        "osDiskType": {
            "defaultValue": "Standard_LRS",
            "type": "string"
        },
        "addressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "string"
        },
        "subnetName": {
            "defaultValue": "subnet01",
            "type": "string"
        },
        "subnetAddressPrefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "string"
        },
        "ibmUserId": {
            "type": "string"
        },
        "ibmUserPwd": {
            "type": "securestring"
        },
        "vmAdminId": {
            "type": "string"
        },
        "vmAdminPwd": {
            "type": "securestring"
        },
        "installKitUri": {
            "type": "string"
        },
        "wasNDTraditional": {
            "defaultValue": "com.ibm.websphere.ND.v90_9.0.5007.20210301_1241",
            "type": "string"
        },
        "ibmJavaSDK": {
            "defaultValue": "com.ibm.java.jdk.v8_8.0.6026.20210226_0840",
            "type": "string"
        },
        "guidValue": {
            "defaultValue": "[newGuid()]",
            "type": "string"
        }
    },
    "variables": {
        "const_arguments": "[concat(' -l \"',parameters('installKitUri'),'\" -u ',parameters('ibmUserId'),' -p ',parameters('ibmUserPwd'),' -t ',parameters('wasNDTraditional'),' -j ',parameters('ibmJavaSDK'))]",
        "const_cloudInitScript": "#!/bin/bash
disk=sda
sudo parted /dev/${disk} --script mklabel gpt mkpart xfspart xfs 0% 100%
if [ $? -ne 0 ]; then
    disk=sdb
    sudo parted /dev/${disk} --script mklabel gpt mkpart xfspart xfs 0% 100%
    if [ $? -ne 0 ]; then
        disk=sdc
        sudo parted /dev/${disk} --script mklabel gpt mkpart xfspart xfs 0% 100%
    fi
fi
sudo mkfs.xfs /dev/${disk}1
sudo partprobe /dev/${disk}1
sudo mkdir /datadrive && sudo mount /dev/${disk}1 /datadrive",
        "const_dnsLabelPrefix": "[concat(parameters('dnsLabelPrefix'), take(replace(parameters('guidValue'),'-',''),6))]",
        "const_scriptLocation": "[uri(parameters('_artifactsLocation'), 'scripts/')]",
        "name_networkInterface": "[concat(variables('name_virtualMachine'), '-if')]",
        "name_networkSecurityGroup": "[concat(variables('const_dnsLabelPrefix'), '-nsg')]",
        "name_publicIPAddress": "[concat(variables('name_virtualMachine'), '-ip')]",
        "name_storageAccount": "[concat('storage',take(replace(parameters('guidValue'),'-',''),6))]",
        "name_virtualMachine": "[concat('wasVM', take(replace(parameters('guidValue'),'-',''),6))]",
        "name_virtualNetwork": "[concat(variables('const_dnsLabelPrefix'), '-vnet')]",
        "ref_networkInterface": "[resourceId('Microsoft.Network/networkInterfaces', variables('name_networkInterface'))]",
        "ref_networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]",
        "ref_publicIPAddress": "[resourceId('Microsoft.Network/publicIPAddresses', variables('name_publicIPAddress'))]",
        "ref_storage": "[resourceId('Microsoft.Storage/storageAccounts', variables('name_storageAccount'))]",
        "ref_subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), parameters('subnetName'))]",
        "ref_virtualMachine": "[resourceId('Microsoft.Compute/virtualMachines', variables('name_virtualMachine'))]",
        "ref_virtualNetwork": "[resourceId('Microsoft.Network/virtualNetworks', variables('name_virtualNetwork'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[variables('name_networkSecurityGroup')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "TCP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "destinationPortRanges": [
                                "22"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[variables('name_virtualNetwork')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_networkSecurityGroup')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('name_virtualNetwork'), '/', parameters('subnetName'))]",
            "dependsOn": [
                "[variables('ref_virtualNetwork')]",
                "[variables('ref_networkSecurityGroup')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix')]",
                "networkSecurityGroup": {
                    "id": "[variables('ref_networkSecurityGroup')]"
                }
            }
        },                
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[variables('name_publicIPAddress')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('const_dnsLabelPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[variables('name_networkInterface')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_publicIPAddress')]",
                "[variables('ref_subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[variables('ref_publicIPAddress')]"
                            },
                            "subnet": {
                                "id": "[variables('ref_subnet')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "primary": true
            }
        },
        {
            "name": "[variables('name_storageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "properties": {},
            "kind": "Storage",
            "sku": {
                "name": "[parameters('osDiskType')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[variables('name_virtualMachine')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_networkInterface')]",
                "[variables('ref_storage')]"
            ],
            "tags": {
                "SkipGreenTeamLinuxSSHAuthForResource": true
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "RedHat",
                        "offer": "RHEL",
                        "sku": "8_3",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('name_virtualMachine'), '-disk')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(reference(variables('name_storageAccount')).primaryEndpoints.blob, 'vhds/', variables('name_virtualMachine'), '.vhd')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "datadisk1",
                            "diskSizeGB": 900,
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat(reference(variables('name_storageAccount')).primaryEndpoints.blob, 'vhds/', variables('name_virtualMachine'), 'datadisk1.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('name_virtualMachine')]",
                    "adminUsername": "[parameters('vmAdminId')]",
                    "adminPassword": "[parameters('vmAdminPwd')]",
                    "customData": "[base64(variables('const_cloudInitScript'))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[variables('ref_networkInterface')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('name_virtualMachine'), '/CustomScript')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_virtualMachine')]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": [
                        "[uri(variables('const_scriptLocation'), concat('install.sh', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('const_scriptLocation'), concat('was-check.sh', parameters('_artifactsLocationSasToken')))]"
                    ],
                    "commandToExecute": "[concat('sh install.sh', variables('const_arguments'))]"
                }
            }
        }
    ]
}